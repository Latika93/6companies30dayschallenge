440. K-th Smallest in Lexicographical Order

// Assume its like a "Denary tree"

class Solution {
    public int findKthNumber(int n, int k) {

        k = k-1;
        int cur = 1;

        while(k>0){
            int steps = steps(n, cur, cur+1);
            if(steps<=k){
                cur = cur+1;
                k-=steps;
            }else{
                cur *= 10;
                k-=1;
            }
        }
        return cur;
    }

    int steps(int n, long n1, long n2){
        int steps = 0;

        while(n1<=n){
            steps += Math.min(n+1, n2) - n1;
            n1*=10;
            n2*=10;
        }
        return steps;
    }
}


