337. House Robber III


/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public int rob(TreeNode root) {
        int ans[] = dfs(root);
        return Math.max(ans[0], ans[1]);
    }

    int[] dfs(TreeNode root){
        if(root == null){
            int res[] = {0,0};
            return res;
        }

        int left[] = dfs(root.left);
        int right[] = dfs(root.right);

        int withRoot = root.val + left[1] + right[1];
        int withOutRoot = Math.max(left[0], left[1]) + Math.max(right[0] , right[1]);

        int res[] = {withRoot, withOutRoot};
        return res;
    }
}
