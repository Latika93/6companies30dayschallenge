Minimum Genetic Mutation

class Solution {
    public int minMutation(String startGene, String endGene, String[] bank) {
        Set<String> set = new HashSet<>();
        for(String s: bank){
            set.add(s);
        }
        
        if(!set.contains(endGene)) return -1;
        
        // int cnt = 0;
        // for(int i = 0; i<8; i++){
        //     if(startGene.charAt(i) != endGene.charAt(i)) cnt++;
        // }
        
        Queue<String> q = new LinkedList<>();
        Set<String> vis = new HashSet<>();
        q.add(startGene);
        vis.add(startGene);
        
        int cnt = 0;
        
        while(!q.isEmpty()){
            int size = q.size();
            while(size-- > 0){
                String cur = q.poll();
                
                if(cur.equals(endGene)) return cnt;
                
                for(char ch: new char[]{'A', 'C', 'G', 'T'}){
                    for(int i = 0; i<cur.length(); i++){
                        String neighbour = cur.substring(0,i) + ch + cur.substring(i+1);
                        if(!vis.contains(neighbour) && set.contains(neighbour)){
                            q.add(neighbour);
                            vis.add(neighbour);
                        }
                    }
                }
            }
            cnt++;
        }
        
        return -1;
    }
}
